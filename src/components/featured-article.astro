---
import {
  Card,
  CardAction,
  CardContent,
  CardDescription,
  CardFooter,
  CardHeader,
  CardTitle,
} from "@/components/ui/card"

export interface Props {
  articles: any[];
}

const { articles } = Astro.props;

function formatDate(date: string | Date) {
  const dateObj = typeof date === 'string' ? new Date(date) : date;
  return dateObj.toLocaleDateString('en-US', { year: 'numeric', month: 'long', day: 'numeric' });
}
function formatDuration(minutes: number) {
  return `${minutes} min read`;
}
---

<div class="space-y-8">
  {articles.map((article, index) => (
    <Card class="flex items-start space-x-6 border-b border-gray-200 pb-8">
      <div class="hidden md:w-16 md:h-16 shrink-0 bg-gray-200 rounded-md overflow-hidden">
        <img src={article.data.image || `/placeholder-${index + 1}.jpg`} alt="" class="w-full h-full object-cover" />
      </div>
      <CardContent class="grow p-0">
        <CardHeader class="p-0 mb-2">
          <CardTitle asChild>
            <h3 class="text-xl font-serif font-light">
              <a href={`/articles/${article.slug}`} class="hover:underline">{article.data.title}</a>
            </h3>
          </CardTitle>
          {article.data.description && (
            <CardDescription>
              <p class="text-gray-600">{article.data.description}</p>
            </CardDescription>
          )}
        </CardHeader>
        <CardFooter class="p-0 mt-2">
          <div class="flex items-center text-sm text-gray-500 w-full">
            <span>{formatDate(article.data.date)}</span>
            <span class="mx-2">•</span>
            <span>{formatDuration(article.data.minutesRead || 5)}</span>
            <span class="mx-2">•</span>
            <CardAction asChild>
              <a href={`/articles/${article.slug}`} class="text-blue-600 hover:underline">Read more →</a>
            </CardAction>
          </div>
        </CardFooter>
      </CardContent>
    </Card>
  ))}
</div>